version: "3.0"

services:
  booking-service_booking-host:
    container_name: bookings-host
    build:
      context: .
      dockerfile: src/BookingService.Booking.Host/Dockerfile
    ports:
      - "8001:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    depends_on:
      booking-service_booking-db:
        condition: service_healthy
      booking-service_rabbitmq:
        condition: service_healthy
  
  booking-service_booking-db:
    image: postgres:latest
    container_name: bookings-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: "booking_service_booking"
      POSTGRES_USER: "booking_admin"
      POSTGRES_PASSWORD: "admin_booking"
      PGDATA: /data/postgres
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 5
  
  booking-service_rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 3